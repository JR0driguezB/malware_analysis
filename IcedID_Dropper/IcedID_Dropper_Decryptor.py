# Author: JR0driguezB
# Tool to decrypt files downloaded by the downloader component distributed by Hancitor via command 4
# At least for now (November 2017), it is only dowloading IcedID

import sys
import struct

def RC4(key,data):

    S = range(256)
    j = 0
    out = []

    #KSA Phase
    for i in range(256):
        j = (j + S[i] + ord( key[i % len(key)] )) % 256
        S[i] , S[j] = S[j] , S[i]

    #PRGA Phase
    i = j = 0
    for char in data:
        i = ( i + 1 ) % 256
        j = ( j + S[i] ) % 256
        S[i] , S[j] = S[j] , S[i]
        out.append(chr(ord(char) ^ S[(S[i] + S[j]) % 256]))

    decrypted_data = ''.join(out)

    return decrypted_data

def main(infile,outfile):

    with open(infile, "r") as encrypted_file:
        encrypted_data = encrypted_file.read()

    key = ""

    for i in range(10,len(encrypted_data)):
        if(encrypted_data[i]) != chr(0x00):
            key += encrypted_data[i]
        else:
            index = i
            break
    print "[+] RC4 key: {}".format(key)

    decrypted_text = RC4(key,encrypted_data[index+1:])

    size = struct.unpack("<I",decrypted_text[:4])[0]

    print "[+] Size of decrypted file: {0} bytes".format(size)

    with open(outfile, 'w') as decrypted_file:
        decrypted_file.write(decrypted_text[4:size+4])

    print "[+] Decrypted file: {}".format(outfile)

if __name__ == '__main__':

    if len(sys.argv) < 3:
        print("[*] {} <infile> <outfile>".format(sys.argv[0]));
    else:
        infile = sys.argv[1]
        outfile = sys.argv[2]
        main(infile,outfile)
